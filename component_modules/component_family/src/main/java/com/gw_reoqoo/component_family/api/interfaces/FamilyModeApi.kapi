package com.gw_reoqoo.component_family.api.interfaces

import androidx.lifecycle.LiveData
import com.gw_reoqoo.lib_http.entities.ScanShareQRCodeResult
import com.tencentcs.iotvideo.http.interceptor.flow.HttpAction
import kotlinx.coroutines.flow.Flow

/**
 * @Description: - 向外提供的接口
 * @Author: XIAOLEI
 * @Date: 2023/7/31
 */
interface FamilyModeApi {

    /**
     * 根据用户ID，获取设备列表
     */
    fun getDeviceList(userId: String): List<IDevice>

    /**
     * 观察某个用户设备列表
     */
    fun watchDeviceList(userId: String): LiveData<List<IDevice>>

    /**
     * 添加设备
     */
    suspend fun addDevice(device: IDevice): Boolean

    /**
     * 删除设备
     */
    fun deleteDevice(device: IDevice): Flow<HttpAction<Any>>

    /**
     * 获取设备信息
     */
    fun deviceInfo(id: String): IDevice?

    /**
     * 根据ID观察设备的最新信息
     * @param deviceId 设备ID
     */
    fun watchDevice(deviceId: String): LiveData<IDevice?>

    /**
     * 通知设备模块刷新最新设备数据
     */
    suspend fun refreshDevice()

    /**
     * 设备重命名
     */
    suspend fun reName(deviceId: String, devName: String): Boolean

    /**
     * 判断是不是4G设备
     */
    fun isFourGDevice(deviceId: String): Boolean?

    /**
     * 监听在线设备
     *
     * @param userId String 用户ID
     * @return LiveData<List<IDevice>> 设备列表
     */
    fun watchOnlineDevice(userId: String): LiveData<List<IDevice>>

    /**
     * 设备是否支持云存
     */
    fun deviceSupportCloud(deviceId: String): Boolean?

    /**
     * 设备云服务的过期时间（0表示未开通云服务，自动续费默认在当前时间+30天）
     *
     * @param deviceId String 设备ID
     * @return Long? 过期时间（单位ms）
     */
    fun deviceVasExpireTime(deviceId: String): Long?

    /**
     * 判断是否是4G设备
     *
     * @param deviceId String 设备id
     * @return Boolean?
     */
    fun is4GDevice(deviceId: String): Boolean?

    /**
     * 判断是不是Reoqoo设备
     */
    fun isReoqooDevice(pid: String): Boolean

    /**
     * 通过扫描别人分享的设备二维码添加设备
     */
    fun addDeviceByScanShareCode(
        qrcodeToken: String,
        deviceId: String,
        remarkName: String? = null
    ): Flow<HttpAction<ScanShareQRCodeResult>>
}