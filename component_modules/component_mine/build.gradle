import com.gw.buildsrc.dependlibs.GwDependLibs
import com.gw.buildsrc.version.Versions

apply from: "${rootDir.absolutePath}/script/gradle/component_depends.gradle"
apply plugin: 'org.jetbrains.kotlin.android'

def isApplication = project.name == debug_module_name

android {
    namespace 'com.gw.cp_mine'

    defaultConfig {
        if (isApplication) {
            applicationId "com.gw.cp_mine"
        }
    }

    /**
     * 资源文件前缀
     */
    resourcePrefix("mine_")

}

dependencies {
    // 重启app 库
    compileOnly "com.jakewharton:process-phoenix:${Versions.ThirdVersions.VERSION_PHONENIX}"

    // PictureSelector 基础 (必须)
    implementation "io.github.lucksiege:pictureselector:${Versions.ThirdVersions.VERSION_PICTURE_SELECTOR}"

    // adapter
    implementation "com.github.CymChad:BaseRecyclerViewAdapterHelper:${Versions.ThirdVersions.VERSION_RECYCLERVIEW_ADAPTER_HELPER}"

    // 滚动选择器
    implementation "cn.aigestudio.wheelpicker:WheelPicker:${Versions.ThirdVersions.VERSION_WHEEL_PICKER}"

    // 图片加载框架
    implementation "com.github.bumptech.glide:glide:${Versions.ThirdVersions.VERSION_GLIDE}"

    // 文件压缩
    implementation "net.lingala.zip4j:zip4j:${Versions.ThirdVersions.VERSION_ZIP4J}"
}

dependencies {
    implementation project(":component_modules:component_device_share_api")
    implementation project(":component_modules:component_family_api")
    implementation project(":component_modules:component_account_api")
    implementation project(":component_modules:component_mine_api")
    implementation project(":component_modules:component_msg_api")
    implementation project(":component_modules:component_config_api")

    implementation("${GwDependLibs.GwLibs.DEPEND_LIB_API_COMPONENT}:component_plugin_service_api:${Versions.ReoqooSdkVer.VERSION_CODE}")
    implementation("${GwDependLibs.GwLibs.DEPEND_LIB_API_COMPONENT}:component_webview_api:${Versions.ReoqooSdkVer.VERSION_CODE}")
    implementation("${GwDependLibs.GwLibs.DEPEND_LIB_API_COMPONENT}:component_website_api:${Versions.ReoqooSdkVer.VERSION_CODE}")
    implementation("${GwDependLibs.GwLibs.DEPEND_LIB_API_COMPONENT}:component_upgrade_api:${Versions.ReoqooSdkVer.VERSION_CODE}")
    implementation("${GwDependLibs.GwLibs.DEPEND_LIB_API_COMPONENT}:component_iotapi_plugin_opt_api:${Versions.ReoqooSdkVer.VERSION_CODE}")
    implementation("${GwDependLibs.GwLibs.DEPEND_LIB_API_COMPONENT}:component_app_setting_api:${Versions.ReoqooSdkVer.VERSION_CODE}")
}

dependencies {
    implementation("${GwDependLibs.GwLibs.DEPEND_LIB_API_COMPONENT}:lib_log:${Versions.ReoqooSdkVer.VERSION_CODE}")
    implementation("${GwDependLibs.GwLibs.DEPEND_LIB_API_COMPONENT}:lib_pickphoto:${Versions.ReoqooSdkVer.VERSION_CODE}")
    implementation("${GwDependLibs.GwLibs.DEPEND_LIB_API_COMPONENT}:lib_webview:${Versions.ReoqooSdkVer.VERSION_CODE}")
    if (isApplication) {
        // 屏幕适配
        implementation "me.jessyan:autosize:${Versions.ThirdVersions.VERSION_AUTO_SIZE}"
    }
}